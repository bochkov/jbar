plugins {
    id 'java'
    id 'application'
    id 'idea'
}

ext {
    osgi_platform = 'cocoa.macosx.x86_64'
    swt_version = '3.124.0'
}

group = 'com.sergeybochkov'
version = '2.0'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') using module("org.eclipse.platform:org.eclipse.swt.$osgi_platform:$swt_version")
    }
}

dependencies {
   implementation 'org.eclipse.platform:org.eclipse.swt.cocoa.macosx.x86_64:3.124.0'
    // implementation 'org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:3.124.0'
    implementation 'net.sourceforge.barbecue:barbecue:1.5-beta1'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'ch.qos.logback:logback-classic:1.4.8'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'com.sergeybochkov.jbar.Application'
    applicationDefaultJvmArgs = ["-Xmx64m", "-XstartOnFirstThread", "-Xdock:name=JBar"]
}

task("macApp", dependsOn: 'build') {
    doLast {
        def outDir = "$buildDir/macApp" as File
        def appDir = "$outDir/JBar.app" as File
        delete outDir
        project.file(appDir).mkdirs()
        copy {
            from tarTree(distTar.archiveFile)
            into "$appDir/Contents/MacOS"
        }
        copy {
            from 'src/main/resources/images/barcode.icns'
            into "$appDir/Contents/Resources"
        }
        copy {
            from 'src/main/resources/Info.plist'
            into "$appDir/Contents"
            filter { line -> line.replace('{{ root }}', distTar.getArchiveBaseName().get() + "-" + distTar.getArchiveVersion().get()) }
        }
        copy {
            from 'src/main/resources/PkgInfo'
            into "$appDir/Contents"
        }
    }
}
